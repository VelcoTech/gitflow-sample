name: ‚≠ê Create release
on:
  push:
permissions:
  contents: write
jobs:
  create-release:
    runs-on: ubuntu-22.04
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - run: gh pr create --base master --head develop --title "This is a test" --fill
  aaa-release:
    runs-on: ubuntu-22.04
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - run: gh pr create --base master --head develop --title "This is a test" --fill
#      - run: echo 'toto'
#      - run: echo ${{ matrix.env }}
#      - run: echo 'tata'
#      - run: |
#          echo ${{ github.ref }}
#          echo ${{ github.ref_name }}
#          echo ${{ github.ref_type }}
#          IFS='/' read -r REFS REF_TYPE REF_NAME <<< ${{ github.ref }}
#          IFS='.-' read -r MAJOR MINOR PATCH PRERELEASE_TYPE PRERELEASE_VERSION <<< $REF_NAME
#          echo $REFS
#          echo $REF_TYPE
#          echo $REF_NAME
#          [[ $count -eq ${{ inputs.expected }} ]] || (echo "::error::Expected ${{ inputs.expected }} files, $count found." && exit 1)

#      - uses: actions/checkout@v3
#      - id: get-version
#        uses: VelcoTech/gitflow-sample/.github/actions/get-version@develop
#      - run: echo ${{ steps.get-version.outputs.version }}

#      - run: echo '{"version":"1.0.3"}' > package.json
#      - uses: stefanzweifel/git-auto-commit-action@v4
#      - uses: ncipollo/release-action@v1
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          name: v${{ needs.get-versions.outputs.short }}
#          tag: ${{ needs.get-versions.outputs.short }}
#          artifactErrorsFailBuild: true
#          artifactContentType: application/zip
#          skipIfReleaseExists: true
#  callable:
#    name: Callable
#    uses: VelcoTech/gitflow-sample/.github/workflows/build-kotlin.yml@develop
#  callable-reusable:
#    uses: VelcoTech/gitflow-sample/.github/workflows/build-kotlin-2.yml@develop
